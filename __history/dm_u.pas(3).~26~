unit dm_u;

interface

uses
  System.SysUtils, System.Classes, db, adodb;

type
  Tdm = class(TDataModule)
    procedure DataModuleCreate(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  dm: Tdm;
  conPAT: TADOConnection;

  { STAP 1 DECLARE }

  // Delphi code  verklaar
  { Copy en pase vir jou tables en rename }
  tbTable: TADOTable;
  dscTable: TDataSource;

  { Copy en pase vir jou eie queries en rename }

  // SQL Verklaar
  qry: TADOQuery;
  dscQry: TDataSource;

//dylan code start
  Query : TADOQuery;
  dscQuery: TDataSource;
//dylan code end

//DYLAN CODE FROM HERE TO 'Implementation

  tbAttempts : TADOTable;
  dscAttempts: TDataSource;

  tbEducators : TADOTable;
  dscEducators: TDataSource;

  tbEnrollments : TADOTable;
  dscEnrollments: TDataSource;

  tbQuizzes : TADOTable;
  dscQuizzes: TDataSource;

  tbStudents : TADOTable;
  dscStudents: TDataSource;

//end of dylan code
implementation

{%CLASSGROUP 'Vcl.Controls.TControl'}
{$R *.dfm}

procedure Tdm.DataModuleCreate(Sender: TObject);
begin
  { STAP TWEE CREATE }
  conPAT := TADOConnection.Create(dm);    //keep

  {TABELLE VERVANG MET JOU EIE KODE}
  tbTable := TADOTable.Create(dm);
  dscTable := TDataSource.Create(dm);

//dylan code start
  tbAttempts := TADOTable.Create(dm);
  dscAttempts := TDataSource.Create(dm);

  tbEducators := TADOTable.Create(dm);
  dscEducators := TDataSource.Create(dm);

  tbEnrollments := TADOTable.Create(dm);
  dscEnrollments := TDataSource.Create(dm);

  tbQuizzes := TADOTable.Create(dm);
  dscQuizzes := TDataSource.Create(dm);

  tbStudents := TADOTable.Create(dm);
  dscStudents := TDataSource.Create(dm);
//dylan code end

  {QRY VERVANG MET JOU EIE KODE}

  qry := TADOQuery.Create(dm);
  dscQry := TDataSource.Create(dm);

//dylan code start
  Query := TADOQuery.Create(dm);
  dscQuery := TDataSource.Create(dm);
//dylan code end

  { STAP 3 Manipulate }

//keep start
  conPAT.ConnectionString := 'Provider=Microsoft.Jet.OLEDB.4.0;Data Source=' +
    ExtractFilePath(ParamStr(0)) + 'PAT.mdb' + '; Persist Security Info=False';
  conPAT.LoginPrompt := False;     //mdb Access 2000

  conPAT.Open;
//keep end

  // Copy en Paste vir elke tabel. Verander Tabel na jou tabel naam }
  {tbTable.Active := False;
  tbTable.Connection := conPAT;
  tbTable.TableName := 'tblContact'; // Jou tabel naam in databasis
  tbTable.Active := true;
  tbTable.Open;
  dscTable.DataSet := tbTable;} //straws commented this block out


//dylan code start
  tbAttempts.Active:= False;
  tbAttempts.Connection:= conPAT;
  tbAttempts.TableName:= 'tblAttempts';
  tbAttempts.Active:= True;
  tbAttempts.Open;
  dscAttempts.DataSet:= tbAttempts;

  tbEducators.Active:= False;
  tbEducators.Connection:= conPAT;
  tbEducators.TableName:= 'tblEducators';
  tbEducators.Active:= True;
  tbEducators.Open;
  dscEducators.DataSet:= tbEducators;

  tbEnrollments.Active:= False;
  tbEnrollments.Connection:= conPAT;
  tbEnrollments.TableName:= 'tblEnrollments';
  tbEnrollments.Active:= True;
  tbEnrollments.Open;
  dscEnrollments.DataSet:= tbEnrollments;

  tbQuizzes.Active:= False;
  tbQuizzes.Connection:= conPAT;
  tbQuizzes.TableName:= 'tblQuizzes';
  tbQuizzes.Active:= True;
  tbQuizzes.Open;
  dscQuizzes.DataSet:= tbQuizzes;

  tbStudents.Active:= False;
  tbStudents.Connection:= conPAT;
  tbStudents.TableName:= 'tblStudents';
  tbStudents.Active:= True;
  tbStudents.Open;
  dscStudents.DataSet:= tbStudents;
//dylan code end

  //Copy en paste oral in jou pat!!!!!!!!!!!!

  {qry.Connection := conPAT;
  qry.SQL.Clear;
  qry.SQL.Text := 'Select * from tblContact';
  qry.ExecSQL;
  qry.open;}               //straws commented this block out

//dylan code start
  Query.Connection:= conPat;
  dscQuery.DataSet:= Query;
  Query.SQL.Clear;
  Query.SQL.Text:= 'Select * from tblStudents;';
  Query.ExecSQL;
  Query.Open;
//dylan code end

end;

end.
